
Daemonize = true
PidFile = /var/run/sip/basicRegister.pid

# Log config options are described in repro.config documentation:
# can be cout|cerr|syslog|file
LoggingType = file
LogLevel = WARNING
LogFilename = basicRegister.log

# Path to load certificates from (optional, there is no default)
# Note that registrationClient loads ALL root certificates found by any of the settings
#
#    CADirectory
#    CAFile
#    CertificatePath
#
# Setting one option does not disable the other options.
#
# Path to load root certificates from
# Iff this directory is specified, all files in the directory
# will be loaded as root certificates, prefixes and suffixes are
# not considered
# Note that registrationClient loads ALL root certificates found by the settings
# CertificatePath, CADirectory and CAFile.  Setting one option does
# not disable the other options.
# On Debian, the typical location is /etc/ssl/certs
# On Red Hat/CentOS, there isn't a directory like this.
CADirectory = /etc/ssl/certs

# Specify a single file containing one or more root certificates
# and possibly chain/intermediate certificates to be loaded
# Iff this filename is specified, the certificates in the file will
# be loaded as root certificates
#
# This option is typically used to load a bundle of certificates
# such as /etc/ssl/certs/ca-certificates.crt on Debian and
# /etc/pki/tls/cert.pem on Red Hat/CentOS
#
# Note that registrationClient loads ALL root certificates found by the settings
# CertificatePath, CADirectory and CAFile.  Setting one option does
# not disable the other options.
#
# Uncomment for Debian/Ubuntu:
#CAFile = /etc/ssl/certs/ca-certificates.crt
# Uncomment for Fedora, Red Hat, CentOS:
#CAFile = /etc/pki/tls/cert.pem

# Certificates in this location have to match one of the filename
# patterns expected by the legacy reSIProcate SSL code:
#
#   domain_cert_NAME.pem, root_cert_NAME.pem, ...
#
# For domain certificates, it is recommended to use the options
# for individual transports, such as TransportXTlsCertificate and
# TransportXTlsPrivateKey and not set CertificatePath at all.
#
CertificatePath =

# The expiry time to request (the server may override with a shorter time)
# May also be specified on per-registration basis (see UserAccountFile below)
RegistrationExpiry = 3600

# Use an outbound proxy (can be blank)
# May also be specified on per-registration basis (see UserAccountFile below)
#OutboundProxy = sip:sip-proxy.example.net

# Text file (Tab separated values) containing accounts to be registered
# File format is:
#
#   AoR<tab>Contact<tab>Secret<tab>Auth-User<tab>Expiry<tab>Outbound-Proxy<tab>Reg-ID<tab>instance-ID
#
# where:
#
#   AoR            is the SIP URI to register, with prefix
#
#   Contact        is the full Contact header URI.  If using outbound,
#                  the transport specified here should probably match
#                  the type of transport that the proxy is using
#                  to contact the external site.
#
#   Secret         is the plaintext secret for DIGEST authentication
#
#   Auth-User      (optional) is the username for authentication, if blank,
#                  it is extracted from the AoR
#
#   Expiry         (optional) expiry timeout (seconds), default is 3600
#
#   Outbound-Proxy (optional) send requests through a proxy
#
#   Reg-ID         (optional) the Reg-ID value for SIP OUTBOUND
#
#   Instance-ID    (optional) the instance-ID value for SIP OUTBOUND
#
#   Example:
#
#   sip:foo@sip.example.org	sip:foo@198.51.100.2:5061;transport=TLS;ob	secret	foo	60	sip:sip-proxy.example.net	1	<urn:uuid:2ee5fbe1-a356-45c4-828a-e38c7068d3cf>
#
UserAccountFile = users.txt

